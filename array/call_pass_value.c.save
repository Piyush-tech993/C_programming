#include<stdio.h>
#include<stdlib.h>
											
struct Rect{
	int a;
	int b;
};
											
int area(struct Rect r)
{
	int a=r.a*r.b;
	return a;
}
											
void array_print(int A[],int n)//call by value method to print the array
{
	for(int i=0;i<n;i++)
	{
		printf("%d\n",A[i]);
	}
}
											
int array_point(int n)// call by reference
{
	int *p;
	p= (int *)malloc(n*sizeof(int));
	return *p;
}
											
int main()
{
	struct Rect c ={5,4};
	int p=area(c);
	printf("area is %d\n\n",p);
											
	printf("accessing through heaap\n");
	struct Rect *q=&c;
	(*q).a=5;
	(*q).b=4;
	printf("%d\n",(*q).a);
	q->a=90;
	printf("%d\n",q->a);
											
	struct Rect *u;
	u=(struct Rect *)malloc(sizeof(struct Rect));
	/*To store the array in the heap malloc function is used for
	  memory storage*/
	u->a=100;
	u->b=200;
	printf("%d\n\n",u->b);
											

	int k[]={5,4,7,8,9,1,3};
	array_print(k,5);
	printf("\n");
											
	int *l=array_point(8);
	int j=0;
	while(j<8){
		printf("%d\n",l);
		j++;
	}

/*PROBLEM - Why printing
		0
		0
		0 till 8 times  not  0
				     1
				     2
				     3 till  7 */
}
											

